version: 2.1

jobs:
  node:
    working_directory: ~/app-deploy
    docker:
      - image: cimg/node:18.20.4

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-yarn-dependencies-{{ checksum "yarn.lock" }}
            - v1-yarn-dependencies-

      - run:
          name: Install AWS CLI and jq
          command: |
            sudo apt-get update && sudo apt-get install -y awscli jq

      - run:
          name: Fetch Environment Variables from AWS Secrets Manager
          command: |
            aws secretsmanager get-secret-value \
              --secret-id $AWS_SECRET_NAME \
              --region $AWS_REGION \
              --query SecretString \
              --output text > secrets.json
            jq -r 'to_entries | .[] | "\(.key)=\(.value)"' secrets.json > ~/app-deploy/.env

      - run:
          name: Export Environment Variables
          command: cat ~/app-deploy/.env >> $BASH_ENV

      - run:
          name: Install Yarn Dependencies
          command: yarn install --frozen-lockfile

      - save_cache:
          paths:
            - node_modules
            - ~/.cache/yarn
          key: v1-yarn-dependencies-{{ checksum "yarn.lock" }}

      - persist_to_workspace:
          root: ~/app-deploy
          paths:
            - node_modules
            - .
            - .env

  build-android:
    executor: android-executor
    steps:
      - checkout

      - run:
          name: Install Node.js via nvm
          command: |
            export NVM_DIR="$HOME/.nvm"
            source /usr/local/share/nvm/nvm.sh
            nvm install 18
            nvm use 18
            node -v
            npm -v

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-

      - run:
          name: Install Node dependencies
          command: |
            export NVM_DIR="$HOME/.nvm"
            source /usr/local/share/nvm/nvm.sh
            nvm use 18
            npm ci

      - run:
          name: Install Java dependencies
          command: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/.gradle
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}

      - run:
          name: Build Android Release APK
          command: cd android && ./gradlew assembleRelease

      - store_artifacts:
          path: android/app/build/outputs/apk/release/app-release.apk
          destination: release-apk

workflows:
  version: 2
  build:
    jobs:
      - build-android
